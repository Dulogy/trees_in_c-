// implement tree in c++

#include<iostream>
#include<vector>
using namespace std;
template<typename T>
class treeNode{
    public :
    T data ;
    vector<treeNode<int>*>children ;
    treeNode(T data){
        this -> data = data ;
    }
    ~treeNode(){
    for(int i = 0; i < children.size(); i++){
    delete children[i] ;
    }
};

void prinTree(treeNode<int>*root){
    if(root == NULL)
    return ;
    cout << root -> data <<":" ; 
    for(int i = 0; i < root -> children.size(); i++){
        cout << root -> children[i] -> data <<"," ;
    }
    cout << "\n" ;
    for(int i = 0; i < root -> children.size(); i++){
        prinTree(root -> children[i]) ;
    }
}
treeNode<int>*takeInput(){
    int rootData ;
    cout << "enter root data :" ;
    cin >> rootData ;
    treeNode<int>* root = new treeNode<int>(rootData) ;
    int child ;
    cout << "enter children of rootData : " ;
    cin >> child ;
    for(int i = 0; i < child; i++){
        treeNode<int>* child = takeInput() ;
        root -> children.push_back(child) ;
    }
    return root ;
}
int main(){
treeNode<int>* root = takeInput() ;
prinTree(root) ;
delete root ;
}
